# Postgres docker compose file.
version: "3.8"
services:


  migration-service:
    container_name: migration_service
    build:
      context: ./database
      dockerfile: Dockerfile.flyway
    entrypoint: flyway
    command: -X migrate
    depends_on:
      - postgres
    environment:
      # NOTE: Chaneg the host name to the name of the postgres container (if needed.)
      FLYWAY_URL: jdbc:postgresql://postgres:5432/postgres
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: postgres
      FLYWAY_CONNECT_RETRIES: 100
    volumes:
      - ./database/scripts:/flyway/scripts
      - ./database/migrations:/flyway/sql
      - ./database/conf:/flyway/conf
    networks:
      - network
    deploy:
      resources:
        limits:
          cpus: '0.25'  
          memory: 256M  
        reservations:
          cpus: '0.10'  
          memory: 128M 

  postgres:
    container_name: postgres
    build:
        context: ./database
        dockerfile: Dockerfile.postgres
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=400
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_SCHEMA: demo
    ports:
      - 5432:5432
    networks:
      - network
    volumes:
      - db:/var/lib/postgresql/data
      - ./database/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '4'
          memory: 2048M
        reservations:
          cpus: '2'
          memory: 1024M

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '2'  
          memory: 256M  
        reservations:
          cpus: '1'  
          memory: 128M 

networks:
  network:
    driver: bridge

volumes:
  db:
    driver: local